# This Python file uses the following encoding: utf-8import jsonimport loggingfrom collections import OrderedDictfrom rest_framework.renderers import JSONRendererfrom rest_framework.response import Responsefrom rest_framework.views import APIViewfrom .models import PriSchoolRank, MidSchoolRank, Scores, HousePricePerSquareInch, TwoDishesOneSoupIdxlog = logging.getLogger(__name__)FLOAT_DATA_FORMAT = '{:,.2f}'class Pri_Edu_Api(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_pri = PriSchoolRank.objects.all()        edu_list = []        for x in list_of_pri:            t = {}            log.debug(x.name_of_school)            t['name_of_school'] = x.name_of_school            t['lat'] = x.lat,            t['lng'] = x.lng,            # t['academic'] = x.academic,            # t['sport'] = x.sport,            # t['music'] = x.music,            # t['teaching_resource'] = x.teaching_resource,            # t['dormitory'] = x.dormitory,            # t['ranking_score_this_year'] = x.ranking_score_this_year,            t['ranking_score_average'] = x.ranking_score_average,            t['district_chn'] = x.district_chn,            t['district_eng'] = x.district_eng,            edu_list.append(t)        content = {'PriSchoolRankingAPI': edu_list}        return Response(content)class Mid_Edu_Api(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_mid = MidSchoolRank.objects.all()        edu_list = []        for x in list_of_mid:            t = {}            log.debug(x.name_of_school)            t['name_of_school'] = x.name_of_school            t['lat'] = x.lat,            t['lng'] = x.lng,            # t['academic'] = x.academic,            # t['sport'] = x.sport,            # t['music'] = x.music,            # t['teaching_resource'] = x.teaching_resource,            # t['dormitory'] = x.dormitory,            # t['ranking_score_this_year'] = x.ranking_score_this_year,            t['ranking_score_average'] = x.ranking_score_average,            t['district_chn'] = x.district_chn,            t['district_eng'] = x.district_eng,            edu_list.append(t)        content = {'MidSchoolRankingAPI': edu_list}        return Response(content)class cr(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_scores = Scores.objects.all()        # cr_list = []        outer_list = [[            "DP05_0017E",            "state"        ], ]        for x in list_of_scores:            t = []            # log.debug(x.crime_rate)            t.append(x.real_crime_rate)            if x.id == 1:                t.append(1)            elif 3 == x.id:                t.append(2)            elif 18 == x.id:                t.append(3)            elif 7 == x.id:                t.append(4)            elif 10 == x.id:                t.append(5)            elif 9 == x.id:                t.append(6)            elif 14 == x.id:                t.append(7)            elif 17 == x.id:                t.append(8)            elif 16 == x.id:                t.append(9)            elif 6 == x.id:                t.append(10)            elif 4 == x.id:                t.append(11)            elif 15 == x.id:                t.append(12)            elif 11 == x.id:                t.append(13)            elif 12 == x.id:                t.append(14)            elif 2 == x.id:                t.append(15)            elif 8 == x.id:                t.append(16)            elif 5 == x.id:                t.append(17)            elif 13 == x.id:                t.append(18)            # t.append(1)            outer_list.append(t)        # content = {'MidSchoolRankingAPI': edu_list}        return Response(outer_list)class hp(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_scores = HousePricePerSquareInch.objects.all()        # cr_list = []        outer_list = [[            "DP05_0017E",            "state"        ], ]        for x in list_of_scores:            t = []            # log.debug(x.crime_rate)            t.append(x.ave_price)            if x.id == 1:                t.append(1)            elif 3 == x.id:                t.append(2)            elif 18 == x.id:                t.append(3)            elif 7 == x.id:                t.append(4)            elif 10 == x.id:                t.append(5)            elif 9 == x.id:                t.append(6)            elif 14 == x.id:                t.append(7)            elif 17 == x.id:                t.append(8)            elif 16 == x.id:                t.append(9)            elif 6 == x.id:                t.append(10)            elif 4 == x.id:                t.append(11)            elif 15 == x.id:                t.append(12)            elif 11 == x.id:                t.append(13)            elif 12 == x.id:                t.append(14)            elif 2 == x.id:                t.append(15)            elif 8 == x.id:                t.append(16)            elif 5 == x.id:                t.append(17)            elif 13 == x.id:                t.append(18)            # t.append(1)            outer_list.append(t)        # content = {'MidSchoolRankingAPI': edu_list}        return Response(outer_list)class edu(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_scores = Scores.objects.all()        # cr_list = []        outer_list = [[            "DP05_0017E",            "state"        ], ]        for x in list_of_scores:            t = []            t.append(x.edu_rank)            if x.id == 1:                t.append(1)            elif 3 == x.id:                t.append(2)            elif 18 == x.id:                t.append(3)            elif 7 == x.id:                t.append(4)            elif 10 == x.id:                t.append(5)            elif 9 == x.id:                t.append(6)            elif 14 == x.id:                t.append(7)            elif 17 == x.id:                t.append(8)            elif 16 == x.id:                t.append(9)            elif 6 == x.id:                t.append(10)            elif 4 == x.id:                t.append(11)            elif 15 == x.id:                t.append(12)            elif 11 == x.id:                t.append(13)            elif 12 == x.id:                t.append(14)            elif 2 == x.id:                t.append(15)            elif 8 == x.id:                t.append(16)            elif 5 == x.id:                t.append(17)            elif 13 == x.id:                t.append(18)            # t.append(1)            outer_list.append(t)        # content = {'MidSchoolRankingAPI': edu_list}        return Response(outer_list)class tdone(APIView):    renderer_classes = (JSONRenderer,)    @staticmethod    def get(request):        list_of_scores = TwoDishesOneSoupIdx.objects.all()        # cr_list = []        outer_list = [[            "DP05_0017E",            "state"        ], ]        for x in list_of_scores:            t = []            # log.debug(x.crime_rate)            t.append(x.ave_price)            if x.id == 1:                t.append(1)            elif 3 == x.id:                t.append(2)            elif 18 == x.id:                t.append(3)            elif 7 == x.id:                t.append(4)            elif 10 == x.id:                t.append(5)            elif 9 == x.id:                t.append(6)            elif 14 == x.id:                t.append(7)            elif 17 == x.id:                t.append(8)            elif 16 == x.id:                t.append(9)            elif 6 == x.id:                t.append(10)            elif 4 == x.id:                t.append(11)            elif 15 == x.id:                t.append(12)            elif 11 == x.id:                t.append(13)            elif 12 == x.id:                t.append(14)            elif 2 == x.id:                t.append(15)            elif 8 == x.id:                t.append(16)            elif 5 == x.id:                t.append(17)            elif 13 == x.id:                t.append(18)            # t.append(1)            outer_list.append(t)        # content = {'MidSchoolRankingAPI': edu_list}        return Response(outer_list)